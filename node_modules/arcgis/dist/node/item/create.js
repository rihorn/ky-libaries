'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = CreateItem;

var _end = require('../lib/end');

var _end2 = _interopRequireDefault(_end);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function CreateItem(arcgis) {
  return function create() {
    var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

    var owner = _ref.owner;
    var title = _ref.title;
    var type = _ref.type;
    var description = _ref.description;
    var url = _ref.url;
    var data = _ref.data;
    var snippet = _ref.snippet;
    var tags = _ref.tags;
    var _ref$access = _ref.access;
    var access = _ref$access === undefined ? 'private' : _ref$access;
    var licenseInfo = _ref.licenseInfo;
    var thumbnail = _ref.thumbnail;
    var extent = _ref.extent;
    var cb = arguments[1];

    var options = {
      title: title,
      description: description,
      type: type,
      tags: tags.join(','),
      access: access
    };
    if (url !== undefined) {
      options.url = url;
    }
    if (data !== undefined) {
      options.text = data;
    }
    if (snippet !== undefined) {
      options.snippet = snippet;
    }
    if (licenseInfo !== undefined) {
      options.licenseInfo = licenseInfo;
    }
    if (thumbnail !== undefined) {
      options.thumbnail = thumbnail;
    }
    if (extent !== undefined) {
      options.extent = extent;
    }

    var createPromise = arcgis.request({
      url: 'content/users/' + owner + '/addItem',
      form: options,
      post: true
    }).then(function (confirm) {
      return arcgis.item(confirm.id);
    });

    return (0, _end2.default)(createPromise, cb);
  };
}