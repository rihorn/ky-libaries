// COPYRIGHT Â© 2018 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.10/esri/copyright.txt for details.

define(["require","exports","../../../../../core/tsSupport/extendsHelper","../../../../../core/libs/gl-matrix-2/gl-matrix","../../../camera/constraintUtils","../../../input/util","../InteractiveController","../momentum/PanPlanarMomentumController","../momentum/PanSphericalMomentumController","../momentum/RotationMomentumController","../momentum/ZoomPlanarMomentumController","../momentum/ZoomSphericalMomentumController","../../utils/navigationUtils","../../utils/navigationUtils","../../../support/geometryUtils","../../../support/geometryUtils","../../../support/mathUtils","../../../webgl-engine/lib/Camera","../../../../navigation/PanPlanarMomentumEstimator","../../../../navigation/PanSphericalMomentumEstimator","../../../../navigation/RotationMomentumEstimator","../../../../navigation/ZoomMomentumEstimator"],function(t,i,e,n,a,o,r,s,h,c,m,p,l,u,P,d,g,v,M,C,S,b){Object.defineProperty(i,"__esModule",{value:!0});var f={aboveGround:.25,belowGround:.025},y=function(t){function i(i,e){var a=t.call(this)||this;return a.view=i,a.intersectionHelper=e,a.smoothRotation=new o.ExponentialFalloff(.05),a.rotationAxis=n.vec3f64.create(),a.panningPlane=d.plane.create(),a.smoothScaling=new o.ExponentialFalloff(.05),a.zoomCenterScreen=n.vec2f64.create(),a.zoomMomentumEstimator=new b.ZoomMomentumEstimator,a.rotationMomentumEstimator=new S.RotationMomentumEstimator,a.panSphericalMomentumEstimator=new C.PanSphericalMomentumEstimator,a.panPlanarMomentumEstimator=new M.PanPlanarMomentumEstimator,a.adjustedSphere=P.sphere.create(),a.tmp2d=n.vec2f64.create(),a.tmp3d=n.vec3f64.create(),a.tmpMat=n.mat4f64.create(),a.tmpAxisAngle=P.axisAngle.create(),a.beginScreenPoint=n.vec2f64.create(),a.beginScenePoint=n.vec3f64.create(),a.screenPickPoint=n.vec2f64.create(),a.panMode=u.PanMode.Horizontal,a.tmpInteractionDirection=n.vec3f64.create(),a.constraintOptions={selection:15,interactionType:0,interactionFactor:0,interactionStartCamera:new v,interactionDirection:null,tiltMode:0},a}return e(i,t),i.prototype.begin=function(t){if(this.active){this.beginHeading=-g.cyclicalPI.normalize(g.deg2rad(this.view.camera.heading)),this.beginRadius=t.radius,this.pointerCount=t.pointers.size,this.beginAngle=t.angle,this.smoothRotation.reset(),l.navPointToScreenPoint(this.currentCamera,t.center,this.screenPickPoint),n.vec2.copy(this.beginScreenPoint,this.screenPickPoint);var i=l.pickPointAndInitSphere(this.intersectionHelper,this.beginCamera,this.screenPickPoint,!0);this.scenePickPoint=i.scenePickPoint,this.sphere=i.sphere,n.vec3.copy(this.beginScenePoint,this.scenePickPoint),this.panMode=l.decidePanMode(this.beginCamera,this.sphere,this.scenePickPoint),this.panMode===u.PanMode.Vertical&&(this.beginCamera.aboveGround?this.preparePlanarPanModeOverground(t):this.preparePlanarPanMode(t)),this.constraintOptions.interactionStartCamera.copyFrom(this.beginCamera)}},i.prototype.preparePlanarPanModeOverground=function(t){var i=n.vec3.negate(this.tmp3d,this.beginCamera.viewForward);d.plane.fromPositionAndNormal(this.scenePickPoint,i,this.panningPlane);var e=n.vec3f64.create();n.vec3.set(e,this.screenPickPoint[0],this.currentCamera.fullHeight,0);var a=n.vec3f64.create(),o=n.vec3.length(this.beginCamera.eye);this.adjustedSphere.radius=o<this.sphere.radius?o-100:this.sphere.radius,l.sphereOrPlanePointFromScreenPoint(this.adjustedSphere,this.beginCamera,e,a),this.beginCamera.projectPoint(a,e);var r=.9*e[1];this.screenPickPoint[1]=Math.min(this.screenPickPoint[1],r),this.intersectionHelper.intersectScreen(this.screenPickPoint,this.scenePickPoint)&&d.plane.fromPositionAndNormal(this.scenePickPoint,this.panningPlane,this.panningPlane),l.navPointToScreenPoint(this.currentCamera,t.center,this.tmp2d),l.intersectPlaneFromScreenPoint(this.panningPlane,this.beginCamera,this.tmp2d,this.beginScenePoint)},i.prototype.preparePlanarPanMode=function(t){var i=n.vec3.negate(this.tmp3d,this.beginCamera.viewForward);d.plane.fromPositionAndNormal(this.scenePickPoint,i,this.panningPlane);var e=P.sphere.angleToSilhouette(this.sphere,this.currentCamera.eye),a=P.axisAngle.fromPoints(this.currentCamera.eye,this.scenePickPoint,this.tmpAxisAngle),o=this.currentCamera.aboveGround?f.aboveGround:f.belowGround,r=-a[3]-o*e;if(r>0){var s=n.mat4.identity(this.tmpMat);n.mat4.rotate(s,s,-r,a),n.vec3.subtract(this.scenePickPoint,this.scenePickPoint,this.sphere.center),n.vec3.transformMat4(this.scenePickPoint,this.scenePickPoint,s),n.vec3.add(this.scenePickPoint,this.scenePickPoint,this.sphere.center),d.plane.setOffsetFromPoint(this.panningPlane,this.scenePickPoint,this.panningPlane),l.navPointToScreenPoint(this.currentCamera,t.center,this.tmp2d),l.intersectPlaneFromScreenPoint(this.panningPlane,this.beginCamera,this.tmp2d,this.beginScenePoint)}},i.prototype.update=function(t){if(this.active){this.currentCamera.copyFrom(this.beginCamera);var i=t.pointers.size,e=i>1;this.panMode===u.PanMode.Horizontal?(e&&this.zoomSpherical(t),this.panningSpherical(t),e&&this.rotateSpherical(t)):(e&&this.zoomPlanar(t),this.panningPlanar(t),e&&this.rotatePlanar(t)),this.currentCamera.markViewDirty()}},i.prototype.end=function(t){t.pointers.size===this.pointerCount&&this.update(t),this.finishController();var i=this.zoomMomentumEstimator.evaluateMomentum();if(i)return this.panMode===u.PanMode.Horizontal?new p.ZoomSphericalMomentumController(this.view,i,this.zoomCenterScreen,this.beginScenePoint,this.sphere.radius):new m.ZoomPlanarMomentumController(this.view,i,this.beginScenePoint);var e=this.rotationMomentumEstimator.evaluateMomentum();if(e)return new c.RotationMomentumController(this.view,e,this.sphere.center,this.rotationAxis);if(this.panMode===u.PanMode.Horizontal){var n=this.panSphericalMomentumEstimator.evaluateMomentum();if(n)return new h.PanSphericalMomentumController(this.view,n)}else{var n=this.panPlanarMomentumEstimator.evaluateMomentum();if(n)return new s.PanPlanarMomentumController(this.view,n)}return null},i.prototype.zoomSpherical=function(t){var i=this.beginRadius/t.radius,e=.001875*Math.min(Math.max(t.radius,40),120);this.smoothScaling.gain=e,this.smoothScaling.update(i),l.applyZoomOnSphere(this.sphere,this.currentCamera,this.smoothScaling.value),l.navPointToScreenPoint(this.currentCamera,t.center,this.zoomCenterScreen),this.zoomMomentumEstimator.add(this.smoothScaling.value,.001*t.timestamp),this.constraintOptions.interactionType=1,this.constraintOptions.interactionFactor=a.pixelDistanceToInteractionFactor(t.radius-this.beginRadius),a.applyAll(this.view,this.currentCamera,this.constraintOptions)},i.prototype.panningSpherical=function(t){l.navPointToScreenPoint(this.currentCamera,t.center,this.tmp2d),l.sphereOrPlanePointFromScreenPoint(this.sphere,this.currentCamera,this.tmp2d,this.tmp3d),l.preserveHeadingThreshold(this.beginScenePoint,n.vec3.dot(this.currentCamera.up,this.beginScenePoint),this.sphere.radius,.95,Math.PI/10,this.beginHeading,this.view.camera.tilt,this.beginCamera)?(l.applyPanSphericalPreserveHeading(this.sphere,this.currentCamera,this.beginScenePoint,this.tmp3d,this.beginHeading,this.view.camera.tilt,!1),this.panSphericalMomentumEstimator.addMomentumPreserveHeading(this.tmp2d,this.tmp3d,.001*t.timestamp,this.beginCamera,this.sphere,this.beginHeading,this.view.camera.tilt)):(l.applyPanSphericalDirectRotation(this.sphere,this.currentCamera,this.beginScenePoint,this.tmp3d,this.view.camera.tilt,!1),this.panSphericalMomentumEstimator.addMomentumDirectRotation(this.tmp2d,this.tmp3d,.001*t.timestamp,this.beginCamera,this.sphere.radius,this.view.camera.tilt)),this.constraintOptions.interactionType=4,this.constraintOptions.interactionFactor=a.pixelDistanceToInteractionFactor(this.screenPickPoint,this.tmp2d),a.applyAll(this.view,this.currentCamera,this.constraintOptions)},i.prototype.rotateSpherical=function(t){n.vec3.normalize(this.rotationAxis,this.scenePickPoint);var i=this.smoothRotation.value,e=l.normalizeRotationDelta(t.angle-i),o=i+e,r=.00125*Math.min(Math.max(t.radius,40),120);this.smoothRotation.gain=r,this.smoothRotation.update(o);var s=this.smoothRotation.value-this.beginAngle;this.rotationMomentumEstimator.add(s,.001*t.timestamp),l.applyRotation(this.currentCamera,this.sphere.center,P.axisAngle.wrapAxisAngle(this.rotationAxis,s)),this.constraintOptions.interactionType=2,this.constraintOptions.interactionFactor=a.pixelDistanceToInteractionFactor(t.radius*o),a.applyAll(this.view,this.currentCamera,this.constraintOptions)},i.prototype.panningPlanar=function(t){l.navPointToScreenPoint(this.currentCamera,t.center,this.tmp2d),l.intersectPlaneFromScreenPoint(this.panningPlane,this.currentCamera,this.tmp2d,this.tmp3d)&&(l.applyPanPlanar(this.currentCamera,this.beginScenePoint,this.tmp3d),this.panPlanarMomentumEstimator.add(this.tmp2d,this.tmp3d,.001*t.timestamp),this.constraintOptions.interactionType=4,this.constraintOptions.interactionFactor=a.pixelDistanceToInteractionFactor(this.beginScreenPoint,this.tmp2d),this.constraintOptions.interactionDirection=this.view.renderCoordsHelper.worldUpAtPosition(this.currentCamera.eye,this.tmpInteractionDirection),a.applyAll(this.view,this.currentCamera,this.constraintOptions),this.constraintOptions.interactionDirection=null)},i.prototype.zoomPlanar=function(t){var i=this.beginRadius/t.radius,e=.001875*Math.min(Math.max(t.radius,40),120);this.smoothScaling.gain=e,this.smoothScaling.update(i),this.zoomMomentumEstimator.add(this.smoothScaling.value,.001*t.timestamp),l.applyZoomToPoint(this.currentCamera,this.beginScenePoint,this.smoothScaling.value,this.view.state.constraints.minimumPoiDistance),this.constraintOptions.interactionType=1,this.constraintOptions.interactionFactor=a.pixelDistanceToInteractionFactor(t.radius-this.beginRadius),a.applyAll(this.view,this.currentCamera,this.constraintOptions)},i.prototype.rotatePlanar=function(t){n.vec3.copy(this.rotationAxis,this.beginScenePoint);var i=this.smoothRotation.value,e=t.angle-i;e=l.normalizeRotationDelta(e);var o=i+e,r=.00125*Math.min(Math.max(t.radius,40),120);this.smoothRotation.gain=r,this.smoothRotation.update(o);var s=this.smoothRotation.value-this.beginAngle;this.rotationMomentumEstimator.add(s,.001*t.timestamp),l.applyRotation(this.currentCamera,this.sphere.center,P.axisAngle.wrapAxisAngle(this.rotationAxis,s)),this.constraintOptions.interactionType=2,this.constraintOptions.interactionFactor=a.pixelDistanceToInteractionFactor(t.radius*s),a.applyAll(this.view,this.currentCamera,this.constraintOptions)},i}(r.InteractiveController);i.PinchAndPanController=y});