// COPYRIGHT Â© 2018 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.10/esri/copyright.txt for details.

define(["require","exports","../../../../../core/tsSupport/extendsHelper","../../../../../core/libs/gl-matrix-2/gl-matrix","../../../camera/constraintUtils","../../../input/util","../InteractiveController","../momentum/PanPlanarMomentumController","../momentum/RotationMomentumController","../momentum/ZoomPlanarMomentumController","../../utils/navigationUtils","../../../support/geometryUtils","../../../support/mathUtils","../../../webgl-engine/lib/Camera","../../../../navigation/PanPlanarMomentumEstimator","../../../../navigation/RotationMomentumEstimator","../../../../navigation/ZoomMomentumEstimator"],function(t,e,i,n,a,o,r,s,l,m,c,h,p,u,v,d,g){Object.defineProperty(e,"__esModule",{value:!0});var C;!function(t){t[t.Vertical=0]="Vertical",t[t.Horizontal=1]="Horizontal"}(C=e.PanMode||(e.PanMode={}));var P=n.vec3f64.fromValues(0,0,1),f={ELEVATION_THRESHOLD:3e4,ANGLE_THRESHOLD:16/180*Math.PI},M=function(t){function e(e,i){var a=t.call(this)||this;return a.view=e,a.intersectionHelper=i,a.rotationValueSmooth=new o.ExponentialFalloff(.05),a.scalingValueSmooth=new o.ExponentialFalloff(.05),a.planeHorizontal=h.plane.create(),a.planeVertical=h.plane.create(),a.rotationMomentumEstimator=new d.RotationMomentumEstimator,a.panMomentumEstimator=new v.PanPlanarMomentumEstimator(300,12,.9),a.zoomMomentumEstimator=new g.ZoomMomentumEstimator,a.beginCenter=n.vec3f64.create(),a.tmpPoints=[],a.beginCenterScreen=n.vec2f64.create(),a.tmpCentroid3d=n.vec3f64.create(),a.tmpCentroid2d=n.vec2f64.create(),a.tmp2d=n.vec2f64.create(),a.constraintOptions={selection:15,interactionType:0,interactionFactor:0,interactionStartCamera:new u,interactionDirection:null,tiltMode:0},a}return i(e,t),e.prototype.begin=function(t){if(this.active){this.beginRadius=t.radius,this.pointerCount=t.pointers.size,this.beginAngle=t.angle,this.rotationValueSmooth.reset(),this.scalingValueSmooth.reset(),c.navPointToScreenPoint(this.beginCamera,t.center,this.beginCenterScreen),h.plane.fromNormalAndOffset(P,0,this.planeHorizontal);var e=n.vec3f64.create();this.intersectionHelper.intersectScreenFreePointFallback(this.beginCenterScreen,e);var i=n.vec3f64.create();n.vec3.negate(i,this.beginCamera.viewForward);var a=n.vec3f64.create();n.vec3.copy(a,P);var o=n.vec3.dot(i,a),r=o<0,s=p.asin(r?-o:o);this.panMode=s>=f.ANGLE_THRESHOLD?C.Horizontal:C.Vertical,h.plane.setOffsetFromPoint(this.planeHorizontal,e,this.planeHorizontal);h.plane.signedDistance(this.planeHorizontal,this.beginCamera.eye)<0&&h.plane.negate(this.planeHorizontal,this.planeHorizontal),this.panMode===C.Vertical?(n.vec3.scale(a,a,o),n.vec3.subtract(this.planeVertical,i,a),n.vec3.normalize(this.planeVertical,this.planeVertical),h.plane.setOffsetFromPoint(this.planeVertical,e,this.planeVertical),this.computePlanePoints(t.pointers,this.planeVertical,this.beginCamera,this.tmpPoints),c.centroid(this.tmpPoints,this.beginCenter)):(this.computePlanePoints(t.pointers,this.planeHorizontal,this.beginCamera,this.tmpPoints),c.centroid(this.tmpPoints,this.beginCenter)),this.constraintOptions.interactionStartCamera.copyFrom(this.beginCamera)}},e.prototype.update=function(t){if(this.active){this.currentCamera.copyFrom(this.beginCamera);var e=t.pointers.size,i=e>1,n=this.panMode===C.Horizontal?this.planeHorizontal:this.planeVertical,o=this.beginCenter;if(i){var r=this.beginRadius/t.radius,s=.001875*Math.min(Math.max(t.radius,40),120);this.scalingValueSmooth.gain=s,this.scalingValueSmooth.update(r),c.applyZoomToPoint(this.currentCamera,o,this.scalingValueSmooth.value,this.view.state.constraints.minimumPoiDistance),this.zoomMomentumEstimator.add(this.scalingValueSmooth.value,.001*t.timestamp),this.constraintOptions.interactionType=1,this.constraintOptions.interactionFactor=a.pixelDistanceToInteractionFactor(Math.abs(t.radius-this.beginRadius)),a.applyAll(this.view,this.currentCamera,this.constraintOptions)}if(this.computePlanePoints(t.pointers,n,this.currentCamera,this.tmpPoints),c.centroid(this.tmpPoints,this.tmpCentroid3d),c.navPointToScreenPoint(this.currentCamera,t.center,this.tmpCentroid2d),c.applyPanPlanar(this.currentCamera,o,this.tmpCentroid3d),this.panMomentumEstimator.add(this.tmpCentroid2d,this.tmpCentroid3d,.001*t.timestamp),this.constraintOptions.interactionType=4,this.constraintOptions.interactionFactor=a.pixelDistanceToInteractionFactor(this.beginCenterScreen,this.tmpCentroid2d),a.applyAll(this.view,this.currentCamera,this.constraintOptions),i){var l=this.planeHorizontal,m=o,p=this.rotationValueSmooth.value,u=c.normalizeRotationDelta(t.angle-p),v=p+u,s=.00125*Math.min(Math.max(t.radius,40),120);this.rotationValueSmooth.gain=s,this.rotationValueSmooth.update(v);var d=this.rotationValueSmooth.value-this.beginAngle;this.rotationMomentumEstimator.add(d,.001*t.timestamp),c.applyRotation(this.currentCamera,m,h.axisAngle.wrapAxisAngle(l,d)),this.constraintOptions.interactionType=2,this.constraintOptions.interactionFactor=a.pixelDistanceToInteractionFactor(Math.abs(t.radius*d)),a.applyAll(this.view,this.currentCamera,this.constraintOptions)}this.currentCamera.markViewDirty()}},e.prototype.end=function(t){t.pointers.size===this.pointerCount&&this.update(t),this.finishController();var e=this.zoomMomentumEstimator.evaluateMomentum();if(e)return new m.ZoomPlanarMomentumController(this.view,e,this.beginCenter);var i=this.rotationMomentumEstimator.evaluateMomentum();if(i)return new l.RotationMomentumController(this.view,i,this.beginCenter,this.planeHorizontal);var n=this.panMomentumEstimator.evaluateMomentum();return n?new s.PanPlanarMomentumController(this.view,n):null},e.prototype.computePlanePoints=function(t,e,i,a){a.length=t.size;var o=this.tmp2d,r=0;return t.forEach(function(t){c.navPointToScreenPoint(i,t,o),void 0===a[r]&&(a[r]=n.vec3f64.create()),c.intersectPlaneFromScreenPoint(e,i,o,a[r]),r+=1}),a},e}(r.InteractiveController);e.PinchAndPanController=M});