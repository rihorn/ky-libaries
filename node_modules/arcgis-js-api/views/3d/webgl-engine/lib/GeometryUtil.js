// COPYRIGHT Â© 2018 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.10/esri/copyright.txt for details.

define(["require","exports","../../../../core/libs/gl-matrix-2/gl-matrix","../../support/geometryUtils","./BufferVectorMath","./GeometryData","./Util"],function(t,e,r,a,n,o,s){var c,v=n.Vec3Compact;!function(t){function e(t){Array.isArray(t)||(t=[t,t,t]);for(var e=new Float32Array(24),r=0;r<8;r++)e[3*r]=a[r][0]*t[0],e[3*r+1]=a[r][1]*t[1],e[3*r+2]=a[r][2]*t[2];var l={};l[s.VertexAttrConstants.POSITION]=new Uint32Array(v),l[s.VertexAttrConstants.NORMAL]=new Uint32Array(i),l[s.VertexAttrConstants.UV0]=new Uint32Array(f);var A={};return A[s.VertexAttrConstants.POSITION]={size:3,data:e},A[s.VertexAttrConstants.NORMAL]={size:3,data:new Float32Array(n)},A[s.VertexAttrConstants.UV0]={size:2,data:new Float32Array(c)},new o(A,l)}for(var r=.5,a=[[-r,-r,r],[r,-r,r],[r,r,r],[-r,r,r],[-r,-r,-r],[r,-r,-r],[r,r,-r],[-r,r,-r]],n=[0,0,1,-1,0,0,1,0,0,0,-1,0,0,1,0,0,0,-1],c=[0,0,1,0,1,1,0,1],v=[0,1,2,2,3,0,4,0,3,3,7,4,1,5,6,6,2,1,1,0,4,4,5,1,3,2,6,6,7,3,5,4,7,7,6,5],i=new Array(36),l=0;l<6;l++)for(var A=0;A<6;A++)i[6*l+A]=l;for(var f=new Array(36),l=0;l<6;l++)f[6*l+0]=0,f[6*l+1]=1,f[6*l+2]=2,f[6*l+3]=2,f[6*l+4]=3,f[6*l+5]=0;t.createGeometry=e}(c||(c={}));var i;!function(t){function e(t){Array.isArray(t)||(t=[t,t,t]);for(var e=new Float32Array(18),r=0;r<6;r++)e[3*r]=a[r][0]*t[0],e[3*r+1]=a[r][1]*t[1],e[3*r+2]=a[r][2]*t[2];var i={};i[s.VertexAttrConstants.POSITION]=new Uint32Array(c),i[s.VertexAttrConstants.NORMAL]=new Uint32Array(v);var l={};return l[s.VertexAttrConstants.POSITION]={size:3,data:e},l[s.VertexAttrConstants.NORMAL]={size:3,data:new Float32Array(n)},new o(l,i)}var r=.5,a=[[-r,0,-r],[r,0,-r],[r,0,r],[-r,0,r],[0,-r,0],[0,r,0]],n=[0,1,-1,1,1,0,0,1,1,-1,1,0,0,-1,-1,1,-1,0,0,-1,1,-1,-1,0],c=[5,1,0,5,2,1,5,3,2,5,0,3,4,0,1,4,1,2,4,2,3,4,3,0],v=[0,0,0,1,1,1,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,7,7,7];t.createGeometry=e}(i||(i={}));var l;!function(t){function e(t){Array.isArray(t)||(t=[t,t,t]);for(var e=new Float32Array(12),r=0;r<4;r++)e[3*r]=d[r][0]*t[0],e[3*r+1]=d[r][1]*t[1],e[3*r+2]=d[r][2]*t[2];var a={};a[s.VertexAttrConstants.POSITION]=new Uint32Array(O),a[s.VertexAttrConstants.NORMAL]=new Uint32Array(u);var n={};return n[s.VertexAttrConstants.POSITION]={size:3,data:e},n[s.VertexAttrConstants.NORMAL]={size:3,data:new Float32Array(h)},new o(n,a)}var a=.5,n=r.vec3f32.fromValues(-a,0,-a),c=r.vec3f32.fromValues(a,0,-a),v=r.vec3f32.fromValues(0,0,a),i=r.vec3f32.fromValues(0,.5,0),l=r.vec3f32.create(),A=r.vec3f32.create(),f=r.vec3f32.create(),y=r.vec3f32.create(),V=r.vec3f32.create();r.vec3.subtract(l,n,i),r.vec3.subtract(A,n,c),r.vec3.cross(f,l,A),r.vec3.normalize(f,f),r.vec3.subtract(l,c,i),r.vec3.subtract(A,c,v),r.vec3.cross(y,l,A),r.vec3.normalize(y,y),r.vec3.subtract(l,v,i),r.vec3.subtract(A,v,n),r.vec3.cross(V,l,A),r.vec3.normalize(V,V);var d=[n,c,v,i],h=[0,-1,0,f[0],f[1],f[2],y[0],y[1],y[2],V[0],V[1],V[2]],O=[0,1,2,3,1,0,3,2,1,3,0,2],u=[0,0,0,1,1,1,2,2,2,3,3,3];t.createGeometry=e}(l||(l={}));var A;!function(t){function e(t,e,r,a,n,c,v){t=t||50,a=void 0!==a?a:-Math.PI,n=void 0!==n?n:2*Math.PI,c=void 0!==c?c:.5*-Math.PI,v=void 0!==v?v:Math.PI;for(var i=Math.max(3,Math.floor(e)||8),l=Math.max(2,Math.floor(r)||6),A=(i+1)*(l+1),f=new Float32Array(3*A),y=new Float32Array(3*A),V=new Float32Array(2*A),d=[],h=0,O=0;O<=l;O++){for(var u=[],x=O/l,C=c+x*v,w=Math.cos(C),m=0;m<=i;m++){var g=m/i,I=a+g*n,M=Math.cos(I)*w,z=Math.sin(C),N=-Math.sin(I)*w;f[3*h]=M*t,f[3*h+1]=z*t,f[3*h+2]=N*t,y[3*h]=M,y[3*h+1]=z,y[3*h+2]=N,V[2*h]=g,V[2*h+1]=x,u.push(h),++h}d.push(u)}var U=new Uint32Array(2*i*(l-1)*3);h=0;for(var O=0;O<l;O++)for(var m=0;m<i;m++){var P=d[O][m],F=d[O][m+1],p=d[O+1][m+1],S=d[O+1][m];0===O?(U[h++]=P,U[h++]=p,U[h++]=S):O===l-1?(U[h++]=P,U[h++]=F,U[h++]=p):(U[h++]=P,U[h++]=F,U[h++]=p,U[h++]=p,U[h++]=S,U[h++]=P)}s.assert(h===U.length);var R={};R[s.VertexAttrConstants.POSITION]=U,R[s.VertexAttrConstants.NORMAL]=U,R[s.VertexAttrConstants.UV0]=U;var L={};return L[s.VertexAttrConstants.POSITION]={size:3,data:f},L[s.VertexAttrConstants.NORMAL]={size:3,data:y},L[s.VertexAttrConstants.UV0]={size:2,data:V},new o(L,R)}function A(t,e,r){function a(e,r){var a;e>r&&(a=[r,e],e=a[0],r=a[1]);var o=e.toString()+"."+r.toString();if(f[o])return f[o];var s=n.length;return n.length+=3,v.add(n,3*e,n,3*r,n,s),v.scale(n,s,t/v.length(n,s)),s/=3,f[o]=s,s}var n,c,i=t;if(r)n=[0,-1,0,1,0,0,0,0,1,-1,0,0,0,0,-1,0,1,0],c=new Uint32Array([0,1,2,0,2,3,0,3,4,0,4,1,1,5,2,2,5,3,3,5,4,4,5,1]);else{var l=i*(1+Math.sqrt(5))/2;n=[-i,l,0,i,l,0,-i,-l,0,i,-l,0,0,-i,l,0,i,l,0,-i,-l,0,i,-l,l,0,-i,l,0,i,-l,0,-i,-l,0,i],c=new Uint32Array([0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1])}for(var A=0;A<n.length;A+=3)v.scale(n,A,t/v.length(n,A));for(var f={},A=0;A<e;A++){for(var y=c.length,V=new Uint32Array(4*y),d=0;d<y;d+=3){var h=c[d],O=c[d+1],u=c[d+2],x=a(h,O),C=a(O,u),w=a(u,h),m=4*d;V[m]=h,V[m+1]=x,V[m+2]=w,V[m+3]=O,V[m+4]=C,V[m+5]=x,V[m+6]=u,V[m+7]=w,V[m+8]=C,V[m+9]=x,V[m+10]=C,V[m+11]=w}c=V,f={}}for(var g=new Float32Array(n),A=0;A<g.length;A+=3)v.normalize(g,A);var I={};I[s.VertexAttrConstants.POSITION]=c,I[s.VertexAttrConstants.NORMAL]=c;var M={};return M[s.VertexAttrConstants.POSITION]={size:3,data:new Float32Array(n)},M[s.VertexAttrConstants.NORMAL]={size:3,data:g},new o(M,I)}function d(t,e,r,a,n,c,v){var i=e?new Float32Array([e[0],e[1],e[2]]):new Float32Array([0,0,0]),l=t?new Float32Array([t[0],t[1],t[2]]):new Float32Array([0,0,1]),A=c?new Float32Array(c):new Float32Array([0,0]),f=r?new Uint8Array([255*r[0],255*r[1],255*r[2],r.length>3?255*r[3]:255]):new Uint8Array([255,255,255,255]),y=null!=a&&2===a.length?new Float32Array(a):new Float32Array([1,1]),V=new Uint32Array([0]),d={};d[s.VertexAttrConstants.POSITION]=V,d[s.VertexAttrConstants.NORMAL]=V,d[s.VertexAttrConstants.UV0]=V,d[s.VertexAttrConstants.COLOR]=V,d[s.VertexAttrConstants.SIZE]=V;var h={};if(h[s.VertexAttrConstants.POSITION]={size:3,data:i},h[s.VertexAttrConstants.NORMAL]={size:3,data:l},h[s.VertexAttrConstants.UV0]={size:A.length,data:A},h[s.VertexAttrConstants.COLOR]={size:4,data:f},h[s.VertexAttrConstants.SIZE]={size:2,data:y},null!=n){var O=new Float32Array([n[0],n[1],n[2],n[3]]);d[s.VertexAttrConstants.AUXPOS1]=V,h[s.VertexAttrConstants.AUXPOS1]={size:4,data:O}}if(null!=v){var u=new Float32Array([v[0],v[1],v[2],v[3]]);d[s.VertexAttrConstants.AUXPOS2]=V,h[s.VertexAttrConstants.AUXPOS2]={size:4,data:u}}return new o(h,d,o.DefaultOffsets,"point")}function h(t,e){for(var r=new Float32Array(3*t.length),a=new Float32Array(e?3*t.length:3),n=new Uint32Array(t.length),c=new Uint32Array(t.length),v=0;v<t.length;v++)r[3*v]=t[v][0],r[3*v+1]=t[v][1],r[3*v+2]=t[v][2],e&&(a[3*v]=e[v][0],a[3*v+1]=e[v][1],a[3*v+2]=e[v][2]),n[v]=v,c[v]=0;e||(a[0]=0,a[1]=1,a[2]=0);var i=new Float32Array(2);i[0]=0,i[1]=0;var l={};l[s.VertexAttrConstants.POSITION]=n,l[s.VertexAttrConstants.NORMAL]=e?n:c,l[s.VertexAttrConstants.UV0]=c;var A={};return A[s.VertexAttrConstants.POSITION]={size:3,data:r},A[s.VertexAttrConstants.NORMAL]={size:3,data:a},A[s.VertexAttrConstants.UV0]={size:2,data:i},new o(A,l,o.DefaultOffsets,"point")}function O(){var t=new Float32Array([0,0,0,0,0,100,100,0,0]),e=new Uint32Array([0,1,2]),r=new Float32Array([0,1,0]),a=new Uint32Array([0,0,0]),n=new Float32Array([0,0]),c=new Uint32Array([0,0,0]),v={};v[s.VertexAttrConstants.POSITION]=e,v[s.VertexAttrConstants.NORMAL]=a,v[s.VertexAttrConstants.UV0]=c;var i={};return i[s.VertexAttrConstants.POSITION]={size:3,data:t},i[s.VertexAttrConstants.NORMAL]={size:3,data:r},i[s.VertexAttrConstants.UV0]={size:2,data:n},new o(i,v)}function u(t){var e=new Float32Array(12);if(t)for(var r=0;r<4;r++)for(var a=0;a<3;a++)e[3*r+a]=t[r][a];else e[0]=-1,e[1]=-1,e[2]=0,e[3]=1,e[4]=-1,e[5]=0,e[6]=1,e[7]=1,e[8]=0,e[9]=-1,e[10]=1,e[11]=0;var n=new Uint32Array([0,1,2,2,3,0]),c=new Float32Array([0,0,1]),v=new Uint32Array([0,0,0,0,0,0]),i=new Float32Array([0,0,1,0,1,1,0,1]),l=new Uint8Array([255,255,255,255]),A={};A[s.VertexAttrConstants.POSITION]=n,A[s.VertexAttrConstants.NORMAL]=v,A[s.VertexAttrConstants.UV0]=n,A[s.VertexAttrConstants.COLOR]=v;var f={};return f[s.VertexAttrConstants.POSITION]={size:3,data:e},f[s.VertexAttrConstants.NORMAL]={size:3,data:c},f[s.VertexAttrConstants.UV0]={size:2,data:i},f[s.VertexAttrConstants.COLOR]={size:4,data:l},new o(f,A)}function x(t,e,a,n,c,v){void 0===c&&(c=!0),void 0===v&&(v=!0);var i=0,l=e,A=t,f=r.vec3f32.fromValues(0,i,0),y=r.vec3f32.fromValues(0,i+A,0),V=r.vec3f32.fromValues(0,-1,0),d=r.vec3f32.fromValues(0,1,0);n&&(i=A,y=r.vec3f32.fromValues(0,0,0),f=r.vec3f32.fromValues(0,i,0),V=r.vec3f32.fromValues(0,1,0),d=r.vec3f32.fromValues(0,-1,0));var h=[y,f],O=[V,d],u=a+2,x=Math.sqrt(A*A+l*l);if(n)for(var C=a-1;C>=0;C--){var w=C*(2*Math.PI/a),m=r.vec3f32.fromValues(Math.cos(w)*l,i,Math.sin(w)*l);h.push(m);var g=r.vec3f32.fromValues(A*Math.cos(w)/x,-l/x,A*Math.sin(w)/x);O.push(g)}else for(var C=0;C<a;C++){var w=C*(2*Math.PI/a),m=r.vec3f32.fromValues(Math.cos(w)*l,i,Math.sin(w)*l);h.push(m);var g=r.vec3f32.fromValues(A*Math.cos(w)/x,l/x,A*Math.sin(w)/x);O.push(g)}var I=new Uint32Array(2*(a+2)*3),M=new Uint32Array(2*(a+2)*3),z=0,N=0;if(c){for(var C=3;C<h.length;C++)I[z++]=1,I[z++]=C-1,I[z++]=C,M[N++]=0,M[N++]=0,M[N++]=0;I[z++]=h.length-1,I[z++]=2,I[z++]=1,M[N++]=0,M[N++]=0,M[N++]=0}if(v){for(var C=3;C<h.length;C++)I[z++]=C,I[z++]=C-1,I[z++]=0,M[N++]=C,M[N++]=C-1,M[N++]=1;I[z++]=0,I[z++]=2,I[z++]=h.length-1,M[N++]=1,M[N++]=2,M[N++]=O.length-1}for(var U=new Float32Array(3*u),C=0;C<u;C++)U[3*C]=h[C][0],U[3*C+1]=h[C][1],U[3*C+2]=h[C][2];for(var P=new Float32Array(3*u),C=0;C<u;C++)P[3*C]=O[C][0],P[3*C+1]=O[C][1],P[3*C+2]=O[C][2];var F={};F[s.VertexAttrConstants.POSITION]=I,F[s.VertexAttrConstants.NORMAL]=M;var p={};return p[s.VertexAttrConstants.POSITION]={size:3,data:U},p[s.VertexAttrConstants.NORMAL]={size:3,data:P},new o(p,F)}function C(t,e,a,n,c,v){var i=n?r.vec3f32.clone(n):r.vec3f32.fromValues(1,0,0),l=c?r.vec3f32.clone(c):r.vec3f32.fromValues(0,0,0),A=void 0===v||v,f=r.vec3f32.create();r.vec3.normalize(f,i);var y=r.vec3f32.create();r.vec3.scale(y,f,Math.abs(t));var V=r.vec3f32.create();r.vec3.scale(V,y,-.5),r.vec3.add(V,V,l);var d=r.vec3f32.fromValues(0,1,0);Math.abs(1-r.vec3.dot(f,d))<.2&&r.vec3.set(d,0,0,1);var h=r.vec3f32.create();r.vec3.cross(h,f,d),r.vec3.normalize(h,h),r.vec3.cross(d,h,f);var O=2*a+(A?2:0),u=a+(A?2:0),x=new Float32Array(3*O),C=new Float32Array(3*u),w=new Float32Array(2*O),m=new Uint32Array(3*a*(A?4:2)),g=new Uint32Array(3*a*(A?4:2));A&&(x[3*(O-2)+0]=V[0],x[3*(O-2)+1]=V[1],x[3*(O-2)+2]=V[2],w[2*(O-2)]=0,w[2*(O-2)+1]=0,x[3*(O-1)+0]=x[3*(O-2)+0]+y[0],x[3*(O-1)+1]=x[3*(O-2)+1]+y[1],x[3*(O-1)+2]=x[3*(O-2)+2]+y[2],w[2*(O-1)]=1,w[2*(O-1)+1]=1,C[3*(u-2)+0]=-f[0],C[3*(u-2)+1]=-f[1],C[3*(u-2)+2]=-f[2],C[3*(u-1)+0]=f[0],C[3*(u-1)+1]=f[1],C[3*(u-1)+2]=f[2]);for(var I=function(t,e,r){m[t]=e,g[t]=r},M=0,z=r.vec3f32.create(),N=r.vec3f32.create(),U=0;U<a;U++){var P=U*(2*Math.PI/a);r.vec3.scale(z,d,Math.sin(P)),r.vec3.scale(N,h,Math.cos(P)),r.vec3.add(z,z,N),C[3*U+0]=z[0],C[3*U+1]=z[1],C[3*U+2]=z[2],r.vec3.scale(z,z,e),r.vec3.add(z,z,V),x[3*U+0]=z[0],x[3*U+1]=z[1],x[3*U+2]=z[2],w[2*U+0]=U/a,w[2*U+1]=0,x[3*(U+a)+0]=x[3*U+0]+y[0],x[3*(U+a)+1]=x[3*U+1]+y[1],x[3*(U+a)+2]=x[3*U+2]+y[2],w[2*(U+a)+0]=U/a,w[2*U+1]=1;var F=(U+1)%a;I(M++,U,U),I(M++,U+a,U),I(M++,F,F),I(M++,F,F),I(M++,U+a,U),I(M++,F+a,F)}if(A){for(var U=0;U<a;U++){var F=(U+1)%a;I(M++,O-2,u-2),I(M++,U,u-2),I(M++,F,u-2)}for(var U=0;U<a;U++){var F=(U+1)%a;I(M++,U+a,u-1),I(M++,O-1,u-1),I(M++,F+a,u-1)}}var p={};p[s.VertexAttrConstants.POSITION]=m,p[s.VertexAttrConstants.NORMAL]=g,p[s.VertexAttrConstants.UV0]=m;var S={};return S[s.VertexAttrConstants.POSITION]={size:3,data:x},S[s.VertexAttrConstants.NORMAL]={size:3,data:C},S[s.VertexAttrConstants.UV0]={size:2,data:w},new o(S,p)}function w(e,r,a,n,o){a=a||10,n=null==n||n,s.assert(e.length>1);for(var c=[[0,0,0]],v=[],i=[],l=0;l<a;l++){v.push([0,-l-1,-(l+1)%a-1]);var A=l/a*2*Math.PI;i.push([Math.cos(A)*r,Math.sin(A)*r])}return t.createPathExtrusionGeometry(i,e,c,v,n,o)}function m(t,e,n,c,v,i){void 0===i&&(i=r.vec3f32.fromValues(0,0,0));var l=t.length,A=new Float32Array(e.length*l*3+(6*n.length||0)),y=new Float32Array(e.length*l+(2*n.length||0)),V=new Float32Array(e.length*l*3+(n?6:0)),d=(e.length-1)*l*6+3*c.length*2,h=new Uint32Array(d),O=new Uint32Array(d),u=0,x=0,C=0,w=0,m=0,g=r.vec3f32.create(),I=r.vec3f32.create(),M=r.vec3f32.create(),z=r.vec3f32.create(),N=r.vec3f32.create(),P=r.vec3f32.create(),F=r.vec3f32.create(),p=r.vec3f64.create(),S=r.vec3f32.create(),R=r.vec3f32.create(),L=r.vec3f32.create(),T=r.vec3f32.create(),G=r.vec3f32.create(),b=a.plane.create();r.vec3.set(S,0,1,0),r.vec3.subtract(I,e[1],e[0]),r.vec3.normalize(I,I),v?(r.vec3.add(p,e[0],i),r.vec3.normalize(M,p)):r.vec3.set(M,0,0,1),U(I,M,S,S,N,M,f),r.vec3.copy(z,M),r.vec3.copy(T,N);for(var D=0;D<n.length;D++)r.vec3.scale(P,N,n[D][0]),r.vec3.scale(p,M,n[D][2]),r.vec3.add(P,P,p),r.vec3.add(P,P,e[0]),A[u++]=P[0],A[u++]=P[1],A[u++]=P[2],y[C++]=0;V[x++]=-I[0],V[x++]=-I[1],V[x++]=-I[2];for(var D=0;D<c.length;D++)h[w++]=c[D][0]>0?c[D][0]:-c[D][0]-1+n.length,h[w++]=c[D][1]>0?c[D][1]:-c[D][1]-1+n.length,h[w++]=c[D][2]>0?c[D][2]:-c[D][2]-1+n.length,O[m++]=0,O[m++]=0,O[m++]=0;for(var q=n.length,B=n.length-1,E=0;E<e.length;E++){var X=!1;if(E>0){r.vec3.copy(g,I),E<e.length-1?(r.vec3.subtract(I,e[E+1],e[E]),r.vec3.normalize(I,I)):X=!0,r.vec3.add(R,g,I),r.vec3.normalize(R,R),r.vec3.add(L,e[E-1],z),a.plane.fromPositionAndNormal(e[E],R,b);a.plane.intersectRay(b,a.ray.wrap(L,g),p)?(r.vec3.subtract(p,p,e[E]),r.vec3.normalize(M,p),r.vec3.cross(N,R,M),r.vec3.normalize(N,N)):U(R,z,T,S,N,M,f),r.vec3.copy(z,M),r.vec3.copy(T,N)}v&&(r.vec3.add(p,e[E],i),r.vec3.normalize(G,p));for(var k=0;k<l;k++)if(r.vec3.scale(P,N,t[k][0]),r.vec3.scale(p,M,t[k][1]),r.vec3.add(P,P,p),r.vec3.normalize(F,P),V[x++]=F[0],V[x++]=F[1],V[x++]=F[2],y[C++]=v?r.vec3.dot(P,G):P[2],r.vec3.add(P,P,e[E]),A[u++]=P[0],A[u++]=P[1],A[u++]=P[2],!X){var Z=(k+1)%l;h[w++]=q+k,h[w++]=q+l+k,h[w++]=q+Z,h[w++]=q+Z,h[w++]=q+l+k,h[w++]=q+l+Z;for(var j=0;j<6;j++)O[m++]=h[w-6+j]-B}q+=l}for(var H=e[e.length-1],D=0;D<n.length;D++)r.vec3.scale(P,N,n[D][0]),r.vec3.scale(p,M,n[D][1]),r.vec3.add(P,P,p),r.vec3.add(P,P,H),A[u++]=P[0],A[u++]=P[1],A[u++]=P[2],y[C++]=0;var J=x/3;V[x++]=I[0],V[x++]=I[1],V[x++]=I[2];for(var K=q-l,D=0;D<c.length;D++)h[w++]=c[D][0]>=0?q+c[D][0]:-c[D][0]-1+K,h[w++]=c[D][2]>=0?q+c[D][2]:-c[D][2]-1+K,h[w++]=c[D][1]>=0?q+c[D][1]:-c[D][1]-1+K,O[m++]=J,O[m++]=J,O[m++]=J;var Q={};Q[s.VertexAttrConstants.POSITION]=h,Q[s.VertexAttrConstants.NORMAL]=O;var W={};return W[s.VertexAttrConstants.POSITION]={size:3,data:A},W.zOffset={size:1,data:y},W[s.VertexAttrConstants.NORMAL]={size:3,data:V},new o(W,Q)}function g(t,e){s.assert(t.length>1,"createPolylineGeometry(): polyline needs at least 2 points"),s.assert(3===t[0].length,"createPolylineGeometry(): malformed vertex"),s.assert(void 0===e||e.length===t.length,"createPolylineGeometry: need same number of points and normals"),s.assert(void 0===e||3===e[0].length,"createPolylineGeometry(): malformed normal");for(var r=new Float32Array(3*t.length),a=new Uint32Array(2*(t.length-1)),n=0,c=0,v=0;v<t.length;v++){for(var i=0;i<3;i++)r[n++]=t[v][i];v>0&&(a[c++]=v-1,a[c++]=v)}var l={},A={};if(l[s.VertexAttrConstants.POSITION]=a,A[s.VertexAttrConstants.POSITION]={size:3,data:r},e){for(var f=new Float32Array(3*e.length),y=0,v=0;v<t.length;v++)for(var i=0;i<3;i++)f[y++]=e[v][i];l[s.VertexAttrConstants.NORMAL]=a,A[s.VertexAttrConstants.NORMAL]={size:3,data:f}}return new o(A,l,o.DefaultOffsets,"line")}function I(t,e){var r=e||[1,1,1,1],a=new Uint8Array(4);a[0]=255*r[0],a[1]=255*r[1],a[2]=255*r[2],a[3]=255*(r.length>3?r[3]:1);var n={},c=t.getVertexAttr();for(var v in c)n[v]=c[v];n[s.VertexAttrConstants.COLOR]={size:4,data:a};var i={};for(var v in t.indices)i[v]=t.indices[v];var l=i[s.VertexAttrConstants.POSITION].length;return i[s.VertexAttrConstants.COLOR]=new Uint32Array(l),t=new o(n,i,t.componentOffsets,t.primitiveType)}function M(t){for(var e=t.getVertexAttr(),a=t.indices,o=n.Vec3Compact.subtract,c=a.position.length/3,v=new Float32Array(3*c),i=e.position.data,l=0,A=a.position,f=new Uint32Array(A.length),d=0;d<A.length;d+=3){o(i,3*A[d],i,3*A[d+2],V,0),o(i,3*A[d],i,3*A[d+1],y,0),r.vec3.cross(y,y,V),r.vec3.normalize(y,y);var h=l/3;v[l++]=y[0],v[l++]=y[1],v[l++]=y[2],f[d]=h,f[d+1]=h,f[d+2]=h}e[s.VertexAttrConstants.NORMAL]={size:3,data:v,offsetIdx:0,strideIdx:3},a[s.VertexAttrConstants.NORMAL]=f}function z(t,e){void 0===e&&(e=t);var r=t.getVertexAttr(),a=r.position.data,n=r.normal.data,o=e.getVertexAttr(),s=o.position.data,c=o.normal.data;if(n)for(var v=0;v<n.length;v+=3){var i=n[v+1];c[v+1]=-n[v+2],c[v+2]=i}if(a)for(var v=0;v<a.length;v+=3){var i=a[v+1];s[v+1]=-a[v+2],s[v+2]=i}return e}function N(t,e,a,n,o){return!(Math.abs(r.vec3.dot(e,t))>o)&&(r.vec3.cross(a,t,e),r.vec3.normalize(a,a),r.vec3.cross(n,a,t),r.vec3.normalize(n,n),!0)}function U(t,e,r,a,n,o,s){return N(t,e,n,o,s)||N(t,r,n,o,s)||N(t,a,n,o,s)}t.createBoxGeometry=c.createGeometry,t.createDiamondGeometry=i.createGeometry,t.createTetrahedronGeometry=l.createGeometry,t.createSphereGeometry=e,t.createPolySphereGeometry=A,t.createPointGeometry=d,t.createPointArrayGeometry=h,t.createTriangleGeometry=O,t.createSquareGeometry=u,t.createConeGeometry=x,t.createCylinderGeometry=C,t.createTubeGeometry=w,t.createPathExtrusionGeometry=m,t.createPolylineGeometry=g,t.addVertexColors=I,t.addNormals=M,t.cgToGIS=z,t.makeOrthoBasisDirUp=N,t.makeOrthoBasisDirUpFallback=U}(A||(A={}));var f=.99619469809,y=r.vec3f32.create(),V=r.vec3f32.create();return A});